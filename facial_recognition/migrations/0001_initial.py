# Generated by Django 5.2.5 on 2025-08-10 05:37

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnrollmentAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('status', models.CharField(choices=[('SUCCESS', 'Successful'), ('FAILED', 'Failed'), ('PROCESSING', 'Processing')], max_length=20)),
                ('frames_processed', models.IntegerField(default=0)),
                ('faces_detected', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, help_text='Time taken to process in seconds', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_attempts', to='students.student')),
            ],
            options={
                'verbose_name': 'Enrollment Attempt',
                'verbose_name_plural': 'Enrollment Attempts',
                'db_table': 'enrollment_attempts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FacialEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('embedding', models.BinaryField(help_text='128-D facial embedding')),
                ('thumbnail', models.ImageField(help_text='Thumbnail of the enrolled face', upload_to='facial_thumbnails/')),
                ('face_confidence', models.FloatField(help_text='Confidence score of face detection', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('embedding_quality', models.FloatField(help_text='Quality score of the facial embedding', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('num_faces_detected', models.IntegerField(default=1, help_text='Number of faces detected in the enrollment process')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='facial_enrollment', to='students.student')),
            ],
            options={
                'verbose_name': 'Facial Enrollment',
                'verbose_name_plural': 'Facial Enrollments',
                'db_table': 'facial_enrollments',
                'ordering': ['-enrollment_date'],
            },
        ),
    ]
